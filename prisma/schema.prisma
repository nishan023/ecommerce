// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id            Int             @id @default(autoincrement())
  category      ProductCategory @relation(fields: [category_id], references: [id])
  category_id   Int
  name          String
  description   String?
  product_image String
  product_items ProductItem[]
}

model ProductItem {
  id                Int                    @id @default(autoincrement())
  product           Product                @relation(fields: [product_id], references: [id])
  product_id        Int
  SKU               String
  quantity_in_stock Int
  price             Float
  configurations    ProductConfiguration[]
  order_lines       OrderLine[]
}

model ProductCategory {
  id                 Int               @id @default(autoincrement())
  parent_category    ProductCategory?  @relation("ChildCategories", fields: [parent_category_id], references: [id])
  parent_category_id Int?
  category_name      String
  products           Product[]
  children           ProductCategory[] @relation("ChildCategories")
  variations         Variation[]
}

model Variation {
  id          Int               @id @default(autoincrement())
  category    ProductCategory   @relation(fields: [category_id], references: [id])
  category_id Int
  name        String
  options     VariationOption[]
}

model VariationOption {
  id             Int                    @id @default(autoincrement())
  variation      Variation              @relation(fields: [variation_id], references: [id])
  variation_id   Int
  value          String
  configurations ProductConfiguration[]
}

model ProductConfiguration {
  product_item        ProductItem     @relation(fields: [product_item_id], references: [id])
  product_item_id     Int
  variation_option    VariationOption @relation(fields: [variation_option_id], references: [id])
  variation_option_id Int

  @@id([product_item_id, variation_option_id])
}

model ShopOrder {
  id                  Int         @id @default(autoincrement())
  user                User        @relation(fields: [user_id], references: [id])
  user_id             Int
  order_date          DateTime
  shipping_address    Address     @relation(fields: [shipping_address_id], references: [id])
  shipping_address_id Int
  order_total         Float
  order_status        OrderStatus @relation(fields: [order_status_id], references: [id])
  order_status_id     Int
  order_lines         OrderLine[]
}

model OrderStatus {
  id         Int         @id @default(autoincrement())
  status     String
  shop_order ShopOrder[]
}

model OrderLine {
  id              Int         @id @default(autoincrement())
  product_item    ProductItem @relation(fields: [product_item_id], references: [id])
  product_item_id Int
  shop_order      ShopOrder   @relation(fields: [shop_order_id], references: [id])
  shop_order_id   Int
  quantity        Int
  price           Float
}

model User {
  id           Int         @id @default(autoincrement())
  email        String      @unique
  phone_number String?
  password     String
  orders       ShopOrder[]
  is_admin     Boolean     @default(false)
  addresses    Address[]
}

model Address {
  id            Int         @id @default(autoincrement())
  user          User        @relation(fields: [user_id], references: [id])
  user_id       Int
  address_line1 String
  address_line2 String?
  city          String
  province        String
  postal_code String
  shop_order    ShopOrder[]
}